@use "../../variables" as *;
@use "../../../node_modules/bootstrap/scss/mixins" as *;

$section-min-height: 500px;

.section-container {
  min-height: $section-min-height;

  display: flex;
  align-items: center;

  @include media-breakpoint-up($grid-desktop-min-size, $grid-breakpoints) {
    //each section can be as tall as the screen, but never more than 1000px
    height: 100vh;
    max-height: 1000px;
  }
}

.section-title {
  margin: 0 $spacing $spacing $spacing;
  font-weight: $font-weight-thin;

  @include media-breakpoint-up($grid-desktop-min-size, $grid-breakpoints) {
    position: sticky;
    top: $header-height;
  }
}

@keyframes anim-intro-rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(359deg);
  }
}

#intro {
  --anim-intro-size: 150vw;
  $img-size: 300px;
  $container-width-desktop: calc(breakpoint-min($grid-desktop-min-size, $grid-breakpoints) - ($spacing * 2));

  overflow: hidden;
  position: relative;

  @media screen and (min-height: 100vw) {
    //when the screen is taller than it is wide
    --anim-intro-size: 150vh;
  }

  &-animation {
    height: var(--anim-intro-size);
    width: var(--anim-intro-size);
    background-image: linear-gradient($color-bg 50%, rgba($color-highlight, 0.4));
    animation: anim-intro-rotate 20s linear infinite;

    position: absolute;
    top: 50%;
    left: 50%;
    margin: calc((var(--anim-intro-size) / 2) * -1) 0 0 calc((var(--anim-intro-size) / 2) * -1);
    z-index: -1;
  }

  .section-container {
    padding: $spacing;
    flex-direction: column;
  }

  img {
    border-radius: 100%;
    border: 2px solid $color-highlight;
    max-height: $img-size;
    max-width: $img-size;
  }

  #greeting-desktop {
    display: none;
  }

  @include media-breakpoint-up($grid-desktop-min-size, $grid-breakpoints) {
    @media screen and (min-height: $section-min-height) {
      // only set this when at a desktop width AND the height is over the min-height set
      max-height: calc(100vh - $header-height);
    }

    .section-container {
      flex-direction: row;
      width: $container-width-desktop;
      margin: 0 auto;
    }

    #greeting-mobile {
      display: none;
    }

    #greeting-desktop {
      display: block;
    }

    img {
      margin-right: $spacing;
    }
  }
}

#skills {
  background: url("../../../src/assets/img/skills-bg.jpg") no-repeat;
  background-size: cover;
  background-attachment: fixed;
  padding: $spacing 0;

  .section-container {
    min-height: 650px;
  }

  #skills-icons-container {
    text-align: center;

    //size/position
    margin: 0 auto;

    //background/shape
    background: rgba(#fff, 0.5);
    backdrop-filter: blur(10px);
    border-radius: $radius;

    //grid
    display: grid;
    gap: $spacing;
    padding: $spacing;
    grid-template-columns: 1fr 1fr 1fr;

    @include media-breakpoint-up(sm, $grid-breakpoints) {
      grid-template-columns: 1fr 1fr 1fr 1fr;
    }

    @include media-breakpoint-up($grid-desktop-min-size, $grid-breakpoints) {
      grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
      gap: $spacing-lg;
      padding: $spacing-lg;
    }

    @include media-breakpoint-up(lg, $grid-breakpoints) {
      grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    }
  }

  footer {
    text-align: right;
    padding: 0 $spacing-sm;
    font-size: $font-size-sm;
    transform: translateY(100%); //push it below the image BG
    opacity: 0.5;
    transition: 0.4s opacity;

    &:hover {
      opacity: 1;
    }
  }
}

#contact {
  padding: $spacing 0;

  .section-container {
    flex-direction: column;
    justify-content: center;
    max-height: 300px;
    min-height: auto;
  }

  #social {
    display: flex;
    gap: $spacing;
  }
}
