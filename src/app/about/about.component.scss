@use "../../global-styles/variables" as *;

$section-min-height: 500px;
$skills-icon-size-default: 75px;
$skills-icon-size-desktop: 96px;
$skills-icons-count: 27;
$skills-icons-animation-delay: 40ms;

@keyframes anim-intro-rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(359deg);
  }
}

@keyframes anim-arrow-bounce {
  0%,
  100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}

@keyframes anim-scale-in {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}

.section-container {
  min-height: $section-min-height;

  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: center;

  @include breakpoint($grid-desktop-min-size) {
    //each section can be as tall as the screen, but never more than 1000px
    max-height: 1000px;
  }
}

.section-title {
  margin: 0 $spacer $spacer $spacer;
  font-weight: $font-weight-thin;
  text-shadow: shadow("xl");

  @include breakpoint($grid-desktop-min-size) {
    position: sticky;
    top: $header-height;
  }

  @include breakpoint(lg) {
    font-size: $font-size-lg;
  }

  @include breakpoint(xl) {
    max-width: breakpoint-size(xl);
    margin-left: auto;
    margin-right: auto;
  }
}

#intro {
  --anim-intro-size: 150vw;
  $img-size: 300px;
  $container-width-desktop: calc(breakpoint-size($grid-desktop-min-size) - ($spacer * 2));

  overflow: hidden;
  position: relative;

  @media screen and (min-height: 100vw) {
    //when the screen is taller than it is wide
    --anim-intro-size: 150vh;
  }

  &::before {
    //This is the spinning gradient animation
    content: "";
    height: var(--anim-intro-size);
    width: var(--anim-intro-size);
    background-image: linear-gradient($color-bg 50%, rgba($color-highlight, 0.4));
    animation: anim-intro-rotate 20s linear infinite;
    position: absolute;
    top: 50%;
    left: 50%;
    margin: calc((var(--anim-intro-size) / 2) * -1) 0 0 calc((var(--anim-intro-size) / 2) * -1);
    z-index: -1;
  }

  .section-container {
    padding: $spacer;

    position: relative;
    z-index: 1;

    &::before {
      //This is the bouncing arrow
      content: "ðŸ¡“";
      font-size: 35px;
      position: absolute;
      bottom: 0;
      width: 100%;
      text-align: center;
      pointer-events: none;

      opacity: 0;
      transition: opacity $anim-duration;
    }

    &.show-arrow {
      &::before {
        opacity: 1;
        animation: anim-arrow-bounce 2s infinite;
      }
    }
  }

  img {
    border-radius: 100%;
    border: 2px solid $color-highlight;
    max-height: $img-size;
    max-width: $img-size;
    aspect-ratio: 1/1;
    width: 100%;
    height: 100%;
  }

  #greeting-desktop {
    display: none;
  }

  @include breakpoint($grid-desktop-min-size) {
    .section-container {
      flex-direction: row;
      width: $container-width-desktop;
      margin: 0 auto;

      @media screen and (min-height: $section-min-height) {
        // only set this when at a desktop width AND the height is over the min-height set
        min-height: calc(100vh - $header-height);
      }
    }

    #greeting-mobile {
      display: none;
    }

    #greeting-desktop {
      display: block;
    }

    img {
      margin-right: $spacer;
    }
  }
}

.icon {
  width: 100%;
  position: relative;

  svg {
    //smaller size on mobile sizes
    height: $skills-icon-size-default;
    width: $skills-icon-size-default;
    transition: $anim-duration transform;

    @include breakpoint(sm) {
      //mack to normal sizes for larger screens
      height: $skills-icon-size-desktop;
      width: $skills-icon-size-desktop;
    }
  }

  h3 {
    position: absolute;
    margin: 0;
    opacity: 0;
    width: 200%;
    font-weight: $font-weight-thin;
    text-align: center;
    transition: $anim-duration opacity $ease-out-back, $anim-duration transform $ease-out-back;
    transform: translate(-25%, -10px);

    span {
      background-color: $color-bg;
      padding: $spacer-sm;
      border-radius: $radius;
      white-space: nowrap;

      @include drop-shadow("lg");
    }
  }

  &:focus,
  &:focus-within,
  &:hover {
    z-index: 10;

    svg {
      transform: scale(1.1);
      @include drop-shadow("lg");
    }
    h3 {
      opacity: 1;
      transform: translate(-25%, 0);
    }
  }
}

#skills,
#contact {
  background-attachment: scroll;
  background-position-x: center; //position-y will be handled by parallax directive
  background-repeat: no-repeat;
  background-size: auto;
  padding: $spacer 0;

  @include breakpoint(xxl) {
    background-attachment: fixed;
    background-size: cover;
  }
}

#skills {
  background-image: url("../../../src/assets/img/skills-bg.jpg");

  .section-container {
    gap: $spacer;
  }

  footer {
    text-align: right;
    padding: 0 $spacer-sm;
    font-size: $font-size-xs;
    opacity: 0.5;
    transition: $anim-duration opacity;

    &:hover {
      opacity: 1;
    }
  }
}

.skills-icons-card {
  //size/position
  margin: 0 auto;
  padding: $spacer;

  //background/shape
  background: rgba(#fff, 0.5);
  backdrop-filter: blur(10px);
  border-radius: $radius;

  &-title {
    margin: 0 0 $spacer 0;
    color: $color-bg;
  }

  @include breakpoint($grid-desktop-min-size) {
    padding: $spacer-lg;

    &-title {
      margin-bottom: $spacer-lg;
    }
  }

  &-icons {
    //grid
    display: grid;
    gap: $spacer;

    grid-template-columns: repeat(3, 1fr);

    @include breakpoint(sm) {
      grid-template-columns: repeat(5, 1fr);
    }

    @include breakpoint($grid-desktop-min-size) {
      grid-template-columns: repeat(6, 1fr);
      gap: $spacer-lg;
    }

    @include breakpoint(lg) {
      grid-template-columns: repeat(7, 1fr);
    }

    > * {
      //default until class is added
      transform: scale(0);

      .skills-icons-animate & {
        animation: anim-scale-in $anim-duration $ease-out-back;
        animation-fill-mode: both;

        @for $i from 1 through $skills-icons-count {
          &:nth-child(#{$i}) {
            animation-delay: $skills-icons-animation-delay * $i;
          }
        }
      }
    }
  }
}

#contact {
  background-image: url("../../../src/assets/img/contact-bg.jpg");

  .section-container {
    max-height: 300px;
  }

  #social {
    display: grid;
    gap: $spacer;
    grid-template-columns: repeat(2, 1fr);

    @include breakpoint(sm) {
      grid-template-columns: repeat(4, 1fr);
      gap: $spacer-lg;
    }

    .icon {
      svg {
        fill: $color-text;
      }
      h3 {
        span {
          color: $color-text;
        }
      }
    }
  }
}
