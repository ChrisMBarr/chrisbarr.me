@use "../../global-styles/variables" as *;
@use "home-variables" as *;

.section-container {
  min-height: $home-section-min-height;

  &-vertical {
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: center;
  }

  &-horizontal {
    margin: 0 $spacer;

    @include breakpoint(xl) {
      max-width: breakpoint-size(xl);
      margin-left: auto;
      margin-right: auto;
    }
  }

  @include breakpoint($grid-desktop-min-size) {
    //each section can be as tall as the screen, but never more than 1000px
    max-height: 1000px;
  }
}

.section-title {
  position: relative; //above the grain texture
  margin: 0 $spacer $spacer $spacer;
  font-weight: $font-weight-thin;
  text-shadow: shadow("lg");

  @include breakpoint(lg) {
    font-size: $font-size-lg;
  }

  @include breakpoint(xl) {
    max-width: breakpoint-size(xl);
    margin-left: auto;
    margin-right: auto;
  }
}

.home-column-card {
  z-index: 1; //above the grain texture
  padding: $home-card-padding;
  background: $home-card-bg;
  backdrop-filter: blur($home-card-bg-blur);
  border-radius: $home-card-radius;
  color: $home-card-color;

  & + & {
    //vertically stacked
    margin-top: $home-card-padding;

    @include breakpoint($grid-desktop-min-size) {
      //side-by-side
      margin-top: 0;
    }
  }

  &-title {
    margin: $home-card-title-margin;
  }

  a {
    color: $home-card-link-color;
  }
}

#intro {
  @keyframes anim-intro-rotate {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(359deg);
    }
  }

  @keyframes anim-arrow-bounce {
    0%,
    100% {
      transform: translateY(-25%);
      animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }
    50% {
      transform: none;
      animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
  }

  --anim-intro-size: 150vw;
  $img-size: 300px;
  $container-width-desktop: calc(breakpoint-size($grid-desktop-min-size) - ($spacer * 2));

  overflow: hidden;
  position: relative;

  @media screen and (min-height: 100vw) {
    //when the screen is taller than it is wide
    --anim-intro-size: 150vh;
  }

  &::before {
    //This is the spinning gradient animation
    content: "";
    height: var(--anim-intro-size);
    width: var(--anim-intro-size);
    background-image: linear-gradient($color-bg 50%, rgba($color-highlight, 0.4));
    animation: anim-intro-rotate 20s linear infinite;
    position: absolute;
    top: 50%;
    left: 50%;
    margin: calc((var(--anim-intro-size) / 2) * -1) 0 0 calc((var(--anim-intro-size) / 2) * -1);
    z-index: -1;
  }

  .section-container {
    padding: $spacer;
    flex-wrap: wrap;

    position: relative;
    z-index: 1;

    &::before {
      //This is the bouncing arrow
      content: "ðŸ¡“";
      font-size: 35px;
      position: absolute;
      bottom: 0;
      width: 100%;
      text-align: center;
      pointer-events: none;

      opacity: 0;
      transition: opacity $anim-duration;
    }

    &.show-arrow {
      &::before {
        opacity: 1;
        animation: anim-arrow-bounce 2s infinite;
      }
    }
  }

  img {
    border-radius: 100%;
    border: 2px solid $color-highlight;
    max-height: $img-size;
    max-width: $img-size;
    aspect-ratio: 1/1;
    width: 100%;
    height: 100%;
    flex: 1;
  }

  #intro-photo-desktop {
    display: none;
  }

  #intro-text{
    flex: 1;
    text-align: center;
  }

  @include breakpoint($grid-desktop-min-size) {
    .section-container {
      flex-direction: row;
      width: $container-width-desktop;
      margin: 0 auto;

      @media screen and (min-height: $home-section-min-height) {
        // only set this when at a desktop width AND the height is over the min-height set
        height: calc(100vh - $header-height);
      }
    }

    #intro-text{
      text-align: left;
    }

    #intro-photo-mobile {
      display: none;
    }

    #intro-photo-desktop {
      display: block;
    }

    img {
      margin-right: $spacer;
    }
  }
}

#social {
  flex: 1; //puts this on a new line
  display: grid;
  gap: $spacer;
  grid-template-columns: repeat(2, 1fr);

  a {
    display: flex;
    flex-direction: column;
    align-items: center;
    font-size: 20px;
    text-align: center;
  }

  svg {
    fill: currentColor;
    width: 50px;
    height: 50px;
  }

  @include breakpoint(sm) {
    grid-template-columns: repeat(4, 1fr);
    gap: $spacer-lg;
  }
}

#featured-work,
#skills,
#education {
  background-attachment: scroll;
  background-size: cover;
  background-repeat: no-repeat;
  padding: $spacer 0;

  @include breakpoint($grid-desktop-min-size) {
    background-position: center;
    background-size: cover;
    background-attachment: fixed;
  }
}

#featured-work {
  background-image: url("../../../src/assets/svg/disk.svg");
  background-size: 184% 100%;
  background-position: 100% 0;

  @include breakpoint($grid-desktop-min-size) {
    background-size: cover;
    background-position: center;
  }

  .home-column-card {
    a {
      display: block;
    }
    img {
      max-width: 100%;
      border-radius: $radius-sm;
      transition: $anim-duration transform $ease-out-back;
    }

    &:focus,
    &:focus-within,
    &:hover {
      img {
        transform: scale(1.02);
        @include drop-shadow("lg");
      }
    }
  }
}

#skills {
  background-image: url("../../../src/assets/svg/wave.svg");

  .section-container {
    gap: $spacer;
  }

  footer {
    text-align: right;
    padding: 0 $spacer-sm;
    font-size: $font-size-xs;
    opacity: 0.5;
    transition: $anim-duration opacity;

    &:hover {
      opacity: 1;
    }
  }
}

#education {
  background-image: url("../../../src/assets/svg/rain.svg");
  background-size: 400%;
  background-position: center 100%;

  @include breakpoint($grid-desktop-min-size) {
    background-size: cover;
    background-position: center;
  }

  .section-container {
    min-height: 250px;
  }
}
